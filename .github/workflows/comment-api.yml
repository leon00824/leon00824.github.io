name: Comment API

on:
  workflow_dispatch: # 手动触发

jobs:
  handle-comments:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install node-fetch

      - name: Process Pending Comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node -e '
            const fetch = require("node-fetch");

            async function submitComment() {
              // 模拟从前端获取数据（这里需要手动触发，实际中可扩展为读取文件）
              const pendingComment = { name: "Test User", className: "Test Class", content: "Test Content" }; // 替换为实际数据
              if (!pendingComment) return;

              const { name, className, content } = pendingComment;
              if (!name || !className || !content) {
                console.log("字段未填全，跳过提交");
                return;
              }

              const response = await fetch("https://api.github.com/repos/leon00824/leon00824.github.io/issues", {
                method: "POST",
                headers: {
                  "Authorization": `token ${process.env.GITHUB_TOKEN}`,
                  "Content-Type": "application/json",
                  "Accept": "application/vnd.github.v3+json",
                },
                body: JSON.stringify({
                  title: `${name} (${className}) 的留言`,
                  body: content,
                }),
              });

              if (response.ok) {
                console.log("留言提交成功！");
              } else {
                console.error("提交失败，状态码：", response.status);
              }
            }

            async function fetchComments() {
              const response = await fetch("https://api.github.com/repos/leon00824/leon00824.github.io/issues?state=open", {
                headers: {
                  "Authorization": `token ${process.env.GITHUB_TOKEN}`,
                  "Accept": "application/vnd.github.v3+json",
                },
              });
              const issues = await response.json();
              const commentsData = issues.map(issue => {
                const [name, className] = issue.title.match(/^(.*) \((.*)\)$/).slice(1);
                return { name, className, content: issue.body };
              });

              // 写入 comments.json 文件
              const fs = require("fs");
              fs.writeFileSync("comments.json", JSON.stringify(commentsData, null, 2));
            }

            (async () => {
              await submitComment();
              await fetchComments();
            })();
          '

      - name: Commit comments.json
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add comments.json
          git commit -m "Update comments.json with latest comments" || echo "No changes to commit"
          git push
